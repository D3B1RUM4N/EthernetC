public static void findDependencies(TypeElement typeElement) {
        // Parcours des éléments dépendants
        for (Element enclosedElement : typeElement.getEnclosedElements()) {
            if (enclosedElement.getKind() == ElementKind.FIELD) {
                VariableElement fieldElement = (VariableElement) enclosedElement;
                TypeMirror fieldType = fieldElement.asType();
                System.out.println("Dépendance : " + fieldType.toString());
            } else if (enclosedElement.getKind() == ElementKind.METHOD) {
                ExecutableElement methodElement = (ExecutableElement) enclosedElement;
                TypeMirror returnType = methodElement.getReturnType();
                System.out.println("Dépendance : " + returnType.toString());
            }
        }

        // Parcours des interfaces implémentées par la classe ou l'enum
        for (TypeMirror interfaceType : typeElement.getInterfaces()) {
            System.out.println("Dépendance (Interface) : " + interfaceType.toString());
        }

        // Parcours de la classe mère (superclass) de la classe ou l'enum
        TypeMirror superClassType = typeElement.getSuperclass();
        if (!superClassType.toString().equals("java.lang.Object")) {
            System.out.println("Dépendance (Superclass) : " + superClassType.toString());
        }
    }